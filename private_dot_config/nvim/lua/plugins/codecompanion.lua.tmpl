{{ if eq .chezmoi.os "darwin" -}}

return {
 {
   "olimorris/codecompanion.nvim",
   dependencies = {
     "nvim-lua/plenary.nvim",
     "nvim-treesitter/nvim-treesitter",
   },
   config = true,
   opts = {
      strategies = {
        {{ if eq .chezmoi.hostname "GL723J93MH" -}}
        chat = { adapter = 'copilot' },
        inline = { adapter = 'copilot' },
        {{ else -}}
        chat = { adapter = 'ollama' },
        inline = { adapter = 'ollama' },
        {{ end -}}
        adapters = {
           qwencoder = function()
            return require("codecompanion.adapters").extend("ollama", {
              name = "qwencoder", -- Give this adapter a different name to differentiate it from the default ollama adapter
              schema = {
                model = {
                  default = "qwen2.5-coder:7b",
                },
                num_ctx = {
                  default = 16384,
                },
                num_predict = {
                  default = -1,
                },
              },
            })
          end,
          llama31 = function()
            return require("codecompanion.adapters").extend("ollama", {
              name = "llama31", -- Give this adapter a different name to differentiate it from the default ollama adapter
              schema = {
                model = {
                  default = "llama3.1:latest",
                },
                num_ctx = {
                  default = 16384,
                },
                num_predict = {
                  default = -1,
                },
              },
            })
          end,
          Gemini = function()
            return require("codecompanion.adapters").extend("gemini", {
              schema = {
                model = {
                  default = "gemini-2.0-flash-exp",
                },
              },
              env = {
                api_key = vim.env.GEMINI_API_KEY,
              },
            })
          end,
        },
      }
   } 
 },
}

{{ else if eq .chezmoi.os "linux" -}}

return {
 {
   "olimorris/codecompanion.nvim",
   dependencies = {
     "nvim-lua/plenary.nvim",
     "nvim-treesitter/nvim-treesitter",
   },
   config = true,
   opts = {
      strategies = {
        chat = { adapter = 'Gemini' },
        inline = { adapter = 'Gemini' },
      },
     adapters = {
       Gemini = function()
        return require("codecompanion.adapters").extend("gemini", {
          schema = {
            model = {
              default = "gemini-2.0-flash-exp",
            },
          },
          env = {
            api_key = vim.env.GEMINI_API_KEY,
          },
        })
      end,
     },
   },
 },
}

{{- end -}}
